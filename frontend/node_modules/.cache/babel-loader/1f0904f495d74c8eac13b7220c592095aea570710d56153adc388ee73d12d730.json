{"ast":null,"code":"var _jsxFileName = \"/Users/gaobotao/Documents/Projects/meme_generator_v2/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles/App.css';\nimport MemeForm from './components/MemeForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const handleSubmit = async formData => {\n    setLoading(true);\n    setResult(null);\n    setError(null);\n    try {\n      const response = await fetch('/api/generate-meme-coin', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to generate meme coin.');\n      }\n      const data = await response.json();\n      setResult(data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Solana Meme Coin Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Create your own meme coin on Solana Devnet!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(MemeForm, {\n        onSubmit: handleSubmit,\n        loading: loading,\n        result: result,\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TIBGSCeJrdKcjTsj20P4UouJYBg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MemeForm","jsxDEV","_jsxDEV","App","_s","loading","setLoading","result","setResult","error","setError","handleSubmit","formData","response","fetch","method","body","ok","errorData","json","Error","data","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["/Users/gaobotao/Documents/Projects/meme_generator_v2/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './styles/App.css';\nimport MemeForm from './components/MemeForm';\n\ninterface MemeCoinResult {\n  mintAddress: string;\n  explorerUrl: string;\n}\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState<MemeCoinResult | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleSubmit = async (formData: FormData) => {\n    setLoading(true);\n    setResult(null);\n    setError(null);\n\n    try {\n      const response = await fetch('/api/generate-meme-coin', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to generate meme coin.');\n      }\n\n      const data: MemeCoinResult = await response.json();\n      setResult(data);\n    } catch (err: any) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Solana Meme Coin Generator</h1>\n        <p>Create your own meme coin on Solana Devnet!</p>\n      </header>\n      <main>\n        <MemeForm onSubmit={handleSubmit} loading={loading} result={result} error={error} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kBAAkB;AACzB,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAwB,IAAI,CAAC;EACjE,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAgB,IAAI,CAAC;EAEvD,MAAMY,YAAY,GAAG,MAAOC,QAAkB,IAAK;IACjDN,UAAU,CAAC,IAAI,CAAC;IAChBE,SAAS,CAAC,IAAI,CAAC;IACfE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,yBAAyB,EAAE;QACtDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEJ;MACR,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACT,KAAK,IAAI,+BAA+B,CAAC;MACrE;MAEA,MAAMY,IAAoB,GAAG,MAAMR,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClDX,SAAS,CAACa,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOC,GAAQ,EAAE;MACjBZ,QAAQ,CAACY,GAAG,CAACC,OAAO,CAAC;IACvB,CAAC,SAAS;MACRjB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEJ,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBvB,OAAA;MAAQsB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BvB,OAAA;QAAAuB,QAAA,EAAI;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnC3B,OAAA;QAAAuB,QAAA,EAAG;MAA2C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACT3B,OAAA;MAAAuB,QAAA,eACEvB,OAAA,CAACF,QAAQ;QAAC8B,QAAQ,EAAEnB,YAAa;QAACN,OAAO,EAAEA,OAAQ;QAACE,MAAM,EAAEA,MAAO;QAACE,KAAK,EAAEA;MAAM;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACzB,EAAA,CAzCQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}